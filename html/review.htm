<head>
  <title>Review Your Purchases | TOAST</title>
  <meta name="description" content="See your recently purchased items and submit a product review. Help others choose by rating your TOAST purchase.">
</head>
  

  <div class="col-xs-12 col-sm-6 col-sm-push-3 landingBSIntro reviewParagraph">
            <h1>Here are your most recent purchases. </h1>
            <p>Please let us know your thoughts by submitting a review. Each review will be entered into a prize draw to win £200 to spend at TOAST.
    <br><a href="/content/static+pages/review-terms-and-conditions.htm" class="underlineLink sansBook reviewParagraphLink">Prize draw terms & conditions</a></p>
      </div>
<div class="productReviewHolder col-sm-10 col-sm-offset-1">

  <div class="reviewProducts"></div>
</div>


<script>
// init
var trimmedSkus = []
var safeSkuList = []
var killSkuList = []
var sanitusedSkuList = []

// create SKU arrays from query string
var urlParam = location.search.split('skus=')[1]
var skuArray = urlParam.split(',')

var skuArrayLength = skuArray.length
for (var i = 0; i < skuArrayLength; i++) {
    trimmedSkus.push(skuArray[i].substring(0,5))
}

for (var i = 0; i < skuArray.length; i++) {
    if (skuArray[i].indexOf("&login=true") > -1){
        sanitusedSkuList.push(skuArray[i].slice(0, -11))
    } else {
        sanitusedSkuList.push(skuArray[i])  
    }
    
}

var skuListVar = { skuList: trimmedSkus }

// check login
// if (tcp_env.user.email != "") {}


// sku checker
$.ajax({
    url: "/services/stockservices.asmx/GetProductVariantStock",
    type: "POST",
    contentType: "application/json; charset=utf-8",
    data: JSON.stringify(skuListVar),
    dataType: "json",
    success: function(data) {
        var jsonData = $.parseJSON(data.d)

        availableSkus = []

        $.each(jsonData.stocklist, function( index, value ) {
            availableSkus.push(value.prodId.substring(0,5))
        })

        loadSanitisedSkus()
    },
    error: function(data){
         _gaq.push(["_trackEvent", "Review Listing Page - GetProductVariantStock API fail", "Click", JSON.stringify(skuArray)])
         $(".reviewProducts").prepend("<p class='sansBook'>Error connecting to product service (GetProductVariantStock).</p>")
    }
})

function isEven(value){
    if (value%2 == 0)
        return true;
    else
        return false;
}

function layoutFormat() {
    if (isEven($(".reviewProducts .reviewLink").length) && $(".reviewProducts .reviewLink").length < 5) {
        if ($(".reviewProducts .reviewLink").length == 2) {
            $(".productReviewHolder").removeClass("col-sm-10").removeClass("col-sm-offset-1")
            $(".productReviewHolder").addClass("col-sm-8").addClass("col-sm-offset-2")
            $(".reviewProduct").removeClass("col-sm-4").addClass("col-sm-6")
        } else {
            $(".productReviewHolder").removeClass("col-sm-10").removeClass("col-sm-offset-1")
            $(".productReviewHolder").addClass("col-sm-8").addClass("col-sm-offset-2")
            $(".reviewProduct").removeClass("col-sm-4").addClass("col-sm-5")
        }
    } else {

       if ($(".reviewProducts .reviewLink").length == 1) {
        $(".productReviewHolder").removeClass("col-sm-10").removeClass("col-sm-offset-1")
        $(".productReviewHolder").addClass("col-sm-4").addClass("col-sm-offset-4")
        $(".reviewProduct").removeClass("col-sm-4").addClass("col-sm-12")
    }
}

}

// Get the pictures using the sanitised SKU list
function loadSanitisedSkus() {

// filter out all dead SKUs from trimmed array
for (var i = trimmedSkus.length - 1; i >= 0; i--) {
    if ($.inArray(trimmedSkus[i], availableSkus) > -1) {
        safeSkuList.push(trimmedSkus[i])
    }  else {
        killSkuList.push(trimmedSkus[i])
    }
}

// filter our all dead SKU's from un-trimmed array
for (var i = killSkuList.length - 1; i >= 0; i--) {
    sanitusedSkuList.splice($.inArray(killSkuList[i], trimmedSkus),1);
}

safeSkuList.reverse()

safeSkuListData = { skuList: safeSkuList }

$.ajax({
    url: "/services/stockservices.asmx/GetProductData",
    type: "POST",
    contentType: "application/json; charset=utf-8",
    data: JSON.stringify(safeSkuListData),
    dataType: "json",
    success: function(data) {

        var jsonData = $.parseJSON(data.d);

        // check for returned data

        if (jsonData != null){

            $.each(jsonData.products, function( index, value ) {

                arrayProduct = safeSkuList[index]

                $.each(value[arrayProduct], function( indexInt, values ) {

                    searchArray = values.skuSetArr

                    if ($.inArray(sanitusedSkuList[index], searchArray) > -1){

                        reviewLink = "http://display.ugc.bazaarvoice.com/static/toast/en_GB/container.htm?bvaction=rr_submit_review&bvproductId"
                        $(".reviewProducts").prepend("<div class='col-sm-4 reviewProduct' id="+arrayProduct+"><a href='"+reviewLink+"="+trimmedSkus[index]+"'><img class='img-responsive' src="+value[arrayProduct][indexInt].upImg+ "/><div class='reviewTitle textBold'>" + value.title + "</div><div class='reviewLink sansMedium'><span class='reviewLinkText'>Leave a review</span></a></div>")

                    }
                })
            })

             for (var i = 0; i < trimmedSkus.length; i++) {
                var $div = $('#'+trimmedSkus[i])
                if ($("div[id*='"+trimmedSkus[i]+"']").length > 1) {
                    $("div[id*='"+trimmedSkus[i]+"']").not(':last').remove()
                }
        }

        _gaq.push(["_trackEvent", "Review Listing Page - Sku's shown", "Click", JSON.stringify(skuArray)])
        layoutFormat()

        } else {
            _gaq.push(["_trackEvent", "Review Listing Page - GetProductData API no data", "Click", JSON.stringify(skuArray)])
            $(".reviewProducts").prepend("<p class='sansBook'>Product is no longer active.</p>")
        }

       
    },
    error: function(data){
         _gaq.push(["_trackEvent", "Review Listing Page - GetProductVariantStock API fail", "Click", JSON.stringify(skuArray)])
         $(".reviewProducts").prepend("<p class='sansBook'>Error connecting to product service (GetProductData).</p>")
    }
})
}



</script>​